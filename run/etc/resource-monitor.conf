# 监听配置文件
# 配置语法：
# [name]
# as=value
# 各模块内as最好是唯一的，否则相同as都能生效，value不可换行
# as是各模块相通的名称，执行流程：condition -> msg -> exec
# as允许使用非=和空的所有字符，一般建议使用好理解的名称。
#
# 当condition中对应的as条件成功则生成对应as的msg信息
# 如果还存在对应as的exec则通过命令传送报警信息否则直接输出
#
# condition 块value允许包含多个规则（即共用同一个as）
# 打开调试能查看有效配置信息
#
# 所有value都是通过shell命令替换之后再使用，即在value中可以使用任何可见变量并使用，同时也可以使用相关命令替换。
# 一般不建议在value中写入一些非指定的变量或增加命令替换，除非你清楚需求和结果
# 因为使用 (()) 运算，运算数必需是整数，所以实际统计数据会有点偏小


############################################################################
############################### 配置报警规则 ###############################
############################################################################
[condition]

# 监听资源过量判断条件
# 所有语法不匹配的将丢弃，多个直接连接即可。
# 语法格式：
# name=resource[:path[,...]][:time]( expression )
# 格式说明：
# name          报警名，区块内唯一，重复最后一个生效
# resource      是资源名，指定需要监听报警的资源
# path          是资源路径与报警中的 {path} 保持一致，多个逗号分开
#               暂时只支持磁盘和网上，其它资源都是单一或无路径
#               不指定则表示每个实体均进行后面的处理
#               如果指定的路径名不存在将永远无法触发报警
# time          指定持续时长，可以是分（i）、时（h）、天（d）
#               允许组合比如：1d3h2s ，中间不能有空格
#               可以不指定，不指定表示每次条件成功就报警
# expression    是各资源条件表达式，按shell的(( expression ))执行
#               各资源信息名：资源名_信息名 比如：CPU_use
#               各信息名全部支持，均为整数计算，不支持字符串参与计算
#               磁盘和网上多资源可见其它非多个，反之不可见
#               所有表达式内不存在的信息均为0


# CPU报警
cpu_wait=CPU::5i(CPU_wait > 10)
cpu_use=CPU::5i(CPU_use > 60)


# 内存报警
mem_use=MEM::5i(MEM_use > 60)


# 磁盘分区报警
disk_use=DISK::5i(DISK_use > 90)


# 网卡报警
netc_erecv=NETC::5i(NETC_rxfifo > 5)
netc_esend=NETC::5i(NETC_txfifo > 5)


############################################################################
############################### 配置报警信息 ###############################
############################################################################
[msg]
# 监听报警信息输出格式，为空不输出信息
# 语法格式：
# name[:-1|:0|:1|:2]=msg
# 格式说明：
# name          报警名（对应condition区块），区块内唯一，重复最后一个生效
#               报警名可以指定特殊状态：(不指定则为报警触发)
#                   :-1    报警释放
#                   :0     无报警
#                   :1     报警计时长中
#                   :2     报警，默认
#                   :*     所有状态
#                   优先级是：指定状态、所有状态、默认状态，且只有一个状态被使用。
# msg           报警内容，允许使用报警相关变量，但变量必需使用 ${var_name} 形式，否则按字符串输出
#               支持所有标准信息名，但必需是全写，没有简写，比如：${CPU_user}
#               特殊信息内容：（对应condition区块项信息）
#                   ${WARN_RESOURCE}    资源名
#                   ${WARN_PATH}        资源路径，部分资源为空
#                   ${WARN_TIME}        最少持续时长
#                   ${WARN_TIMER}       已经持续时长
#                   ${WARN_COND}        报警规则
#                   ${WARN_STATUS}      报警状态
#                                           time    报警计时中，计时达标后触发报警
#                                           none    无报警
#                                           yes     报警中
#                                           stop    报警解除

# CPU报警
cpu_wait=CPU的IO等待率已经持续${WARN_TIMER}超过10%，当前是${CPU_wait}%，请注意排查
cpu_use=CPU使用率已经持续${WARN_TIMER}超过60%，当前是${CPU_use}%，请注意排查


# 内存报警
mem_use=物理内存使用率已经持续${WARN_TIMER}超过60%，当前是${MEM_use}%，请注意排查


# 磁盘分区报警
disk_use=分区${WARN_PATH}使用率已经持续${WARN_TIMER}超过90%，当前是${DISK_use}%，请注意排查


# 网络报警
netc_erecv=网卡${WARN_PATH}接收缓冲区溢出的错误次数已经持续${WARN_TIMER}超过5，当前是${NETC_rxfifo}%，请注意排查
netc_esend=网卡${WARN_PATH}发生缓冲区溢出的错误次数已经持续${WARN_TIMER}超过5，当前是${NETC_txfifo}%，请注意排查




############################################################################
############################### 配置报警命令 ###############################
############################################################################
[exec]
# 配置报警后执行命令
# 监听资源报警通知命令，命令中可以增加可见变量名，执行命令前会进行替换
# 语法格式：
# name[:-1|:0|:1|:2]=command
# 格式说明：
# name          报警名（对应condition区块），区块内唯一，重复最后一个生效
#               报警名可以指定特殊状态：(不指定则为报警触发)
#                   :-1    报警释放
#                   :0     无报警
#                   :1     报警计时长中
#                   :2     报警，默认
#                   :*     所有状态
#                   优先级是：指定状态、所有状态、默认状态，且只有一个状态被使用。
# command       报警命令，允许使用报警相关变量，但变量必需使用 ${var_name} 形式，否则按字符串输出
#               支持所有标准信息名，但必需是全写，没有简写，比如：${CPU_user}
#               特殊信息内容：（对应condition区块项信息）
#                   ${WARN_RESOURCE}    资源名
#                   ${WARN_PATH}        资源路径，部分资源为空
#                   ${WARN_TIME}        最少持续时长
#                   ${WARN_TIMER}       已经持续时长
#                   ${WARN_COND}        报警规则
#                   ${WARN_STATUS}      报警状态
#                                           time    报警计时中，计时达标后触发报警
#                                           none    无报警
#                                           yes     报警中
#                                           stop    报警解除

# CPU报警
# cpu_wait=curl -X POST -d "{'type': '${WARN_NAME}', 'name': 'iowait', 'value': '${CPU_wait}'}" 'http://127.0.0.1/warn'
# cpu_use=curl -X POST -d "{'type': '${WARN_NAME}', 'name': 'iowait', 'value': '${CPU_wait}'}" 'http://127.0.0.1/warn'





